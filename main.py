from telethon import TelegramClient, events
import re
from datetime import datetime, timedelta
import os

# SAJ√ÅT ADATOK
api_id = int(os.getenv('TELEGRAM_API_ID', '26323340'))
api_hash = os.getenv('TELEGRAM_API_HASH', '342872321015c5140d34443fa08d712e')
# Bot token k√∂rnyezeti v√°ltoz√≥k√©nt
bot_token = os.getenv('TELEGRAM_BOT_TOKEN')  # Adj hozz√° egy bot token-t a Render k√∂rnyezeti v√°ltoz√≥khoz
source_channel = 'OddAlertsBot'
target_chat = -1002160063925

# A TelegramClient inicializ√°l√°sa bot token-nel
client = TelegramClient('bot', api_id, api_hash).start(bot_token='7951953035:AAHvvswK0L4H1SwQn071eo6_pG13C4HYY50')

# H√≥napnevek magyar ford√≠t√°sa
honapok = {
    'January': 'Janu√°r',
    'February': 'Febru√°r',
    'March': 'M√°rcius',
    'April': '√Åprilis',
    'May': 'M√°jus',
    'June': 'J√∫nius',
    'July': 'J√∫lius',
    'August': 'Augusztus',
    'September': 'Szeptember',
    'October': 'Okt√≥ber',
    'November': 'November',
    'December': 'December'
}

def format_tip(szoveg, tipp_tipus=None):
    print(f"Feldolgoz√°s alatt: {szoveg}")  # Napl√≥z√°s
    # Tipp t√≠pusa
    tipp = ''
    if tipp_tipus:
        print(f"Tipp t√≠pus: {tipp_tipus}")  # Napl√≥z√°s
        if 'Home Win' in tipp_tipus:
            tipp = 'Hazai gy≈ëzelem'
        elif 'Away Win' in tipp_tipus:
            tipp = 'Vend√©g gy≈ëzelem'
        elif 'Draw' in tipp_tipus:
            tipp = 'D√∂ntetlen'
        else:
            g√≥l_tipp = re.search(r'([+-]?\d+\.?\d*) Goals', tipp_tipus)
            if g√≥l_tipp:
                szam = g√≥l_tipp.group(1)
                tipp = f'T√∂bb mint {szam} g√≥l' if float(szam) > 0 else f'Kevesebb mint {abs(float(szam))} g√≥l'
            else:
                print("Nem ismert tipp t√≠pus.")  # Napl√≥z√°s

    # Csapatok
    try:
        meccs = re.search(r'üÜö (.*?)\n', szoveg)
        csapatok = meccs.group(1) if meccs else 'Nincs adat'
        print(f"Csapatok: {csapatok}")  # Napl√≥z√°s
    except Exception as e:
        print(f"Hiba a csapatok kinyer√©sekor: {e}")
        csapatok = 'Hiba a csapatokn√°l'

    # Liga
    try:
        liga = re.search(r'üèÜ (.*?)\n', szoveg)
        liga_nev = liga.group(1).strip() if liga else 'Nincs adat'
        print(f"Liga: {liga_nev}")  # Napl√≥z√°s
    except Exception as e:
        print(f"Hiba a liga kinyer√©sekor: {e}")
        liga_nev = 'Hiba a lig√°n√°l'

    # Id≈ëpont
    try:
        datum_match = re.search(r'üìÜ .*? (\d+)(?:st|nd|rd|th)? at (\d{2}):(\d{2})\s*\(GMT\)', szoveg)
        if datum_match:
            nap = int(datum_match.group(1))
            ora = int(datum_match.group(2))
            perc = int(datum_match.group(3))
            ma = datetime.now()

            # H√≥nap √©s √©v meghat√°roz√°sa
            if nap < ma.day:
                if ma.month == 12:
                    ev = ma.year + 1
                    honap = 1
                else:
                    ev = ma.year
                    honap = ma.month + 1
            else:
                ev = ma.year
                honap = ma.month

            try:
                meccs_ido = datetime(ev, honap, nap, ora, perc)
                meccs_ido += timedelta(hours=1)  # Id≈ëz√≥na korrekci√≥ (GMT -> CET)

                # H√≥nap nev√©nek kinyer√©se √©s ford√≠t√°sa
                honap_nev = meccs_ido.strftime("%B")
                honap_magyar = honapok.get(honap_nev, honap_nev)

                # D√°tum form√°z√°sa
                datum_str = f"{honap_magyar}. %-d. (%A) ‚Äì %H:%M"
                datum_str = meccs_ido.strftime(datum_str).replace('Monday', 'H√©tf≈ë')\
                    .replace('Tuesday', 'Kedd').replace('Wednesday', 'Szerda')\
                    .replace('Thursday', 'Cs√ºt√∂rt√∂k').replace('Friday', 'P√©ntek')\
                    .replace('Saturday', 'Szombat').replace('Sunday', 'Vas√°rnap')
            except ValueError as e:
                print(f"Hiba a d√°tum form√°z√°sakor: {e}")
                datum_str = '√ârv√©nytelen d√°tum'
        else:
            datum_str = 'Nincs d√°tum'
        print(f"D√°tum: {datum_str}")  # Napl√≥z√°s
    except Exception as e:
        print(f"Hiba a d√°tum kinyer√©sekor: {e}")
        datum_str = 'Hiba a d√°tumn√°l'

    # Val√≥sz√≠n≈±s√©g √©s fair odds
    try:
        prob = re.search(r'Probability[:\s]*([\d\.]+)%\s*\(([\d\.]+)\)', szoveg)
        valoszinuseg = prob.group(1) if prob else 'Nincs adat'
        fair_odds = prob.group(2) if prob else 'Nincs adat'
        print(f"Val√≥sz√≠n≈±s√©g: {valoszinuseg}, Fair odds: {fair_odds}")  # Napl√≥z√°s
    except Exception as e:
        print(f"Hiba a val√≥sz√≠n≈±s√©g kinyer√©sekor: {e}")
        valoszinuseg = 'Hiba'
        fair_odds = 'Hiba'

    # Odds
    try:
        odds = re.search(r'Odds[:\s]*([\d\.]+)', szoveg)
        odds_ertek = odds.group(1) if odds else 'Nincs adat'
        print(f"Odds: {odds_ertek}")  # Napl√≥z√°s
    except Exception as e:
        print(f"Hiba az odds kinyer√©sekor: {e}")
        odds_ertek = 'Hiba'

    # Value
    try:
        value = re.search(r'Value[:\s]*([\d\.]+)%', szoveg)
        value_szazalek = '+' + value.group(1) if value else 'Nincs adat'
        print(f"Value: {value_szazalek}")  # Napl√≥z√°s
    except Exception as e:
        print(f"Hiba a value kinyer√©sekor: {e}")
        value_szazalek = 'Hiba'

    # Kimenet
    return (
        f"‚öΩ Tipp: {tipp}\n\n"
        f"üèÜ Liga: {liga_nev}\n"
        f"üÜö {csapatok}\n"
        f"üìÖ D√°tum: {datum_str}\n"
        f"üìä Val√≥sz√≠n≈±s√©g: {valoszinuseg}% ({fair_odds})\n"
        f"üí∞ Odds: {odds_ertek}\n"
        f"üìà Value: {value_szazalek}%"
    )

@client.on(events.NewMessage(chats=source_channel))
async def handler(event):
    try:
        # 1. √úzenet kinyer√©se √©s napl√≥z√°sa
        teljes_szoveg = event.message.message
        print(f"√öj √ºzenet √©rkezett az OddAlertsBot-t√≥l: {teljes_szoveg}")

        # 2. Ellen≈ërizz√ºk, hogy Value Bet-e az √ºzenet
        if "Value" not in teljes_szoveg:
            print("Nem Value Bet, kihagyom az √ºzenetet.")
            return  # Ha nem Value Bet, csendben kil√©p√ºnk

        print("Value Bet √©szlelve, folytatom a feldolgoz√°st...")

        # 3. Tipp t√≠pus√°nak kinyer√©se
        try:
            tipp_tipus_match = re.search(r'‚öôÔ∏è (.*?)\n', teljes_szoveg)
            tipp_tipus = tipp_tipus_match.group(1).strip() if tipp_tipus_match else None
            if not tipp_tipus:
                print("Nem tal√°lhat√≥ tipp t√≠pus az √ºzenetben!")
                await client.send_message(target_chat, "‚ö†Ô∏è Nem tal√°lhat√≥ tipp t√≠pus az √ºzenetben!")
                return
            print(f"Tipp t√≠pus kinyerve: {tipp_tipus}")
        except Exception as e:
            print(f"Hiba a tipp t√≠pus kinyer√©sekor: {e}")
            await client.send_message(target_chat, f"‚ö†Ô∏è Hiba a tipp t√≠pus kinyer√©sekor: {e}")
            return

        # 4. Meccsek sz√©tv√°laszt√°sa
        try:
            meccs_blokkok = re.split(r'(?=üÜö )', teljes_szoveg)
            print(f"Meccs blokkok sz√°ma: {len(meccs_blokkok)}")
        except Exception as e:
            print(f"Hiba a meccsek sz√©tv√°laszt√°sakor: {e}")
            await client.send_message(target_chat, f"‚ö†Ô∏è Hiba a meccsek sz√©tv√°laszt√°sakor: {e}")
            return

        # 5. Blokk feldolgoz√°sa
        for blokk in meccs_blokkok:
            try:
                if 'üÜö' in blokk:
                    print(f"Blokk feldolgoz√°sa: {blokk}")
                    # Ellen≈ërizz√ºk, hogy a blokk tartalmaz-e Value √©s Probability adatokat
                    if 'Value' in blokk and 'Probability' in blokk:
                        print("Value √©s Probability megtal√°lva, form√°z√°s...")
                        formazott = format_tip(blokk, tipp_tipus)
                        print(f"Form√°zott √ºzenet: {formazott}")
                        await client.send_message(target_chat, formazott)
                        print("√úzenet elk√ºldve a c√©l cseveg√©sbe.")
                    else:
                        print(f"Hi√°nyos adatok a blokkban: {blokk}")
                        await client.send_message(target_chat, f"‚ö†Ô∏è Hi√°nyos adatok a k√∂vetkez≈ë blokkban:\n{blokk}")
            except Exception as e:
                print(f"Hiba a blokk feldolgoz√°sa k√∂zben: {e}")
                await client.send_message(target_chat, f"‚ö†Ô∏è Hiba a blokk feldolgoz√°sa k√∂zben: {e}")

    except Exception as e:
        print(f"Hiba az √ºzenet teljes feldolgoz√°sa k√∂zben: {e}")
        await client.send_message(target_chat, f"‚ö†Ô∏è Hiba az √ºzenet feldolgoz√°sa k√∂zben: {e}")

async def on_start():
    try:
        await client.send_message(target_chat, "‚úÖ √öj botverzi√≥ akt√≠v, csak Value Bet-eket figyelek!")
        print("Kezdeti √ºzenet elk√ºldve.")
    except Exception as e:
        print(f"Hiba a kezdeti √ºzenet k√ºld√©sekor: {e}")

# Bot ind√≠t√°sa bot token-nel
with client:
    # A bot token-t haszn√°ljuk a bejelentkez√©shez
    client.start(bot_token=bot_token)
    client.loop.run_until_complete(on_start())
    client.run_until_disconnected()
